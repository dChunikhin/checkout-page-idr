{"version":3,"sources":["assets/images/parfum.png","store/index.ts","store/reducers/index.ts","store/actions/index.ts","components/ProductImage.tsx","components/QuantitySelector.tsx","services/PriceManager.ts","components/PremiumShippingToggler.tsx","components/CheckoutForm.tsx","components/OrderItem.tsx","components/OrdersList.tsx","components/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","store","createStore","state","arguments","length","undefined","orders","action","type","Object","objectSpread","concat","toConsumableArray","payload","applyMiddleware","thunk","ProductImage","react_default","a","createElement","src","productImage","className","alt","QuantitySelector","_ref","onChange","quantity","disabled","onClick","services_PriceManager","PriceManager","classCallCheck","this","calculateFinishPrice","unitsCount","unitPrice","price","percent","isPremiumShipping","isPremiumShippingFree","totalPrice","calculateTotalPrice","discountPercent","calculateDiscountPercent","finishPrice","applyDiscount","applyPremiumShipping","roundPrice","Math","trunc","PremiumShippingToggler","CHECKOUT_FORM_INITIAL_DATA","firstName","lastName","email","phone","streetName","city","country","CheckoutForm","onSubmit","_useState","useState","_useState2","slicedToArray","data","setData","onInputChange","e","_e$target","target","name","value","defineProperty","entries","map","_ref2","_ref3","key","preventDefault","OrderItem","date","units","OrdersList","order","idx","components_OrderItem","connect","getPrice","setPremiumShipping","_useState3","_useState4","setPremiumShippingFree","_useState5","_useState6","setQuantity","useSelector","dispatch","useDispatch","components_ProductImage","components_QuantitySelector","quantity2","components_PremiumShippingToggler","checked","components_CheckoutForm","console","log","newOrder","Date","getTime","addOrder","components_OrdersList","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a0f70576.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/parfum.5d2b8b6a.png\";","import { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import { ADD_ORDER } from '../actions/index';\r\n\r\nexport default function (state: any = { orders: [] }, action: any) {\r\n    switch (action.type) {\r\n        case ADD_ORDER:\r\n            return { ...state, orders: [ ...state.orders, action.payload ] };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const ADD_ORDER = 'ADD_ORDER';\r\n\r\nexport const addOrder = (newOrder: any) => {\r\n    return {\r\n        type: ADD_ORDER,\r\n        payload: newOrder\r\n    }\r\n};\r\n","import React from 'react';\r\nimport productImage from '../assets/images/parfum.png';\r\n\r\nconst ProductImage = () => {\r\n    return <img src={productImage} className={'product-image'} alt={'product image'}/>\r\n};\r\n\r\nexport default ProductImage;\r\n","import React, {useState} from 'react';\r\n\r\n// most likely, count of available products will be passed from above,\r\n// so it's quite handy to get it from external world\r\nconst MAX_PRODUCT_QUANTITY: number = 12;\r\n\r\nconst QuantitySelector = ({ onChange, quantity }: any) => {\r\n\r\n    const handleIncrement = () => {\r\n        onChange(quantity + 1);\r\n    };\r\n\r\n    const handleDecrement = () => {\r\n        onChange(quantity - 1);\r\n    };\r\n\r\n    return (\r\n        <div className={'quantity-selector'}>\r\n            <button disabled={quantity === 1} onClick={handleDecrement} className={'quantity-selector__button'}>-</button>\r\n            <span className={'quantity-selector__number'}>{quantity}</span>\r\n            <button disabled={quantity === MAX_PRODUCT_QUANTITY} onClick={handleIncrement} className={'quantity-selector__button'}>+</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuantitySelector;\r\n","const PREMIUM_SHIPPING_PRICE: number = 15;\r\n\r\nclass PriceManager {\r\n\r\n    constructor() {\r\n        this.calculateFinishPrice = this.calculateFinishPrice;\r\n    }\r\n\r\n    calculateDiscountPercent(unitsCount: number): number {\r\n        return unitsCount > 1 ? (unitsCount - 1) * 5 : 0;\r\n    }\r\n    calculateTotalPrice(unitsCount: number, unitPrice: number) : number {\r\n        return unitsCount * unitPrice;\r\n    }\r\n    applyDiscount(price: number, percent: number): number {\r\n        return price - (price / 100 * percent);\r\n    }\r\n    applyPremiumShipping(price: number): number {\r\n        return price + PREMIUM_SHIPPING_PRICE;\r\n    }\r\n    calculateFinishPrice(unitsCount: number, unitPrice: number, isPremiumShipping: boolean, isPremiumShippingFree: boolean): number {\r\n        const totalPrice = this.calculateTotalPrice(unitsCount, unitPrice);\r\n        const discountPercent = this.calculateDiscountPercent(unitsCount);\r\n        let finishPrice = this.applyDiscount(totalPrice, discountPercent);\r\n\r\n        if (isPremiumShipping && !isPremiumShippingFree) {\r\n            finishPrice = this.applyPremiumShipping(finishPrice);\r\n        }\r\n\r\n        return this.roundPrice(finishPrice)\r\n    }\r\n    roundPrice(price: number): number {\r\n        const integer = Math.trunc(price);\r\n        const tail = .99;\r\n        return integer + tail;\r\n    }\r\n}\r\n\r\nexport default new PriceManager();\r\n","import React from 'react';\r\n\r\nconst PremiumShippingToggler = ({ disabled, onChange }: any) => {\r\n    return (\r\n        <div className={'premium-shipping-toggler__text'}>\r\n            <span>Premium shipping</span>\r\n            <input type={'checkbox'} disabled={disabled} className={'premium-shipping-toggler__checkbox'} onChange={onChange} />\r\n            {disabled && <span className={'premium-shipping-toggler__text'}>FREE FOR YOU!</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PremiumShippingToggler;\r\n","import React, {useState} from 'react';\r\n\r\nconst CHECKOUT_FORM_INITIAL_DATA = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    streetName: '',\r\n    city: '',\r\n    country: ''\r\n};\r\n\r\nconst CheckoutForm = ({ onSubmit }: any) => {\r\n\r\n    const [data, setData] = useState(CHECKOUT_FORM_INITIAL_DATA);\r\n\r\n    const submitForm = (e: any) => {\r\n        e.preventDefault();\r\n        onSubmit(data);\r\n        setData(CHECKOUT_FORM_INITIAL_DATA);\r\n    };\r\n\r\n    const onInputChange = (e: any) => {\r\n        const { name, value } = e.target;\r\n        setData({ ...data, [name]: value })\r\n    };\r\n\r\n    return (\r\n        <form className={'checkout-form'} onSubmit={onSubmit}>\r\n            {Object.entries(data).map(([key, value]: any) => <input key={key} onChange={onInputChange} type={'text'} name={key} value={value} />)}\r\n            <button type={'submit'} onClick={submitForm}>Purchase</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React from 'react';\r\n\r\nconst OrderItem = ({ data }: any) => {\r\n    return (\r\n        <div className={'order-item'}>\r\n            <span className={'order-item__date'}>Date: {data.date}</span>\r\n            <span className={'order-item__name'}>Name: {data.name}</span>\r\n            <span className={'order-item__units'}>Units: {data.units}</span>\r\n            <span className={'order-item__price'}>Price: {data.price}</span>\r\n            <span className={'order-item__premium'}>Premium Shipping: {data.isPremiumShipping}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderItem;\r\n","import React from 'react';\r\nimport OrderItem from './OrderItem';\r\n\r\nconst OrdersList = ({ orders }: any) => {\r\n    return (\r\n        <ul className={'orders-list'}>\r\n            {orders.map((order: any, idx: number) => <OrderItem key={idx} data={order} />)}\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\nexport default OrdersList;\r\n","import React, { useState } from 'react';\r\nimport {connect, useDispatch, useSelector} from 'react-redux';\r\nimport ProductImage from './ProductImage';\r\nimport QuantitySelector from './QuantitySelector';\r\nimport PriceManager from '../services/PriceManager';\r\nimport PremiumShippingToggler from './PremiumShippingToggler';\r\nimport CheckoutForm from './CheckoutForm';\r\nimport OrdersList from './OrdersList';\r\nimport { addOrder } from '../store/actions/index';\r\n\r\n// most likely, price of a single product and amount of units to make premium shipping free will be passed from above,\r\n// so it's quite handy to get it from external world\r\nconst UNIT_PRICE: number = 27.49;\r\nconst FREE_SHIPPING_PREMIUM_THRESHOLD: number = 12;\r\n\r\nconst App = () => {\r\n\r\n    // PRICE\r\n    const getPrice = () => {\r\n        return PriceManager.calculateFinishPrice(quantity, UNIT_PRICE, isPremiumShipping, isPremiumShippingFree);\r\n    };\r\n\r\n    // PREMIUM SHIPPING\r\n    const [isPremiumShipping, setPremiumShipping] = useState(false);\r\n    const [isPremiumShippingFree, setPremiumShippingFree] = useState(false);\r\n    const onChangePremiumShipping = (e: any) => {\r\n        setPremiumShipping(e.target.checked)\r\n    };\r\n\r\n    // QUANTITY\r\n    const [quantity, setQuantity] = useState(1);\r\n    const onChangeQuantity = (quantity2: number) => {\r\n        setQuantity(quantity2);\r\n\r\n        if (quantity === FREE_SHIPPING_PREMIUM_THRESHOLD) {\r\n            setPremiumShippingFree(true)\r\n        } else {\r\n            setPremiumShippingFree(false)\r\n        }\r\n\r\n    };\r\n\r\n    // ORDERS\r\n    const orders = useSelector((state: any) => state.orders);\r\n    const dispatch = useDispatch();\r\n\r\n    // PURCHASING\r\n    const onPurchase = (data: any) => {\r\n        console.log(data);\r\n        // there's gotta be some logic to \"store\" the order like calling an API etc.\r\n        // but we just put them to store for showing in the order-list\r\n        const newOrder = {\r\n            ...data,\r\n            date: new Date().getTime(),\r\n            price: getPrice(),\r\n            units: quantity,\r\n            isPremiumShipping: isPremiumShipping ? 'YES' : 'NO' };\r\n        dispatch(addOrder(newOrder))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ProductImage />\r\n            <QuantitySelector onChange={onChangeQuantity} quantity={quantity} />\r\n            <PremiumShippingToggler disabled={isPremiumShippingFree} onChange={onChangePremiumShipping} />\r\n            <p className={'quantity'}>Units: {quantity}</p>\r\n            <p className={'price'}>Price: {getPrice()}</p>\r\n            <CheckoutForm onSubmit={onPurchase} />\r\n            <OrdersList orders={orders} />\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default connect()(App)\r\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/index';\nimport App from './components/App';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}